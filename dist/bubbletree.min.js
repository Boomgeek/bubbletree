var BubbleTree=function(e,o,t){var n=this;if(n.version="2.0.2",n.$container=$(e.container),n.config=$.extend({rootPath:"",minRadiusLabels:40,minRadiusAmounts:20,minRadiusHideLabels:0,cutLabelsAt:50},e),n.tooltip=e.tooltipCallback?e.tooltipCallback:function(){},e.tooltip&&(n.tooltip=e.tooltip),n.style=e.bubbleStyles,n.ns=BubbleTree,n.nodesByUrlToken={},n.nodeList=[],n.iconsByUrlToken={},n.globalNodeCounter=0,n.displayObjects=[],n.bubbleScale=1,n.globRotation=0,n.currentYear=e.initYear,n.currentCenter=void 0,n.currentTransition=void 0,n.baseUrl="",n.loadData=function(e){$.ajax({url:e,dataType:"json",success:this.setData.bind(this)})},n.setData=function(e){var o=this;e||(e=o.config.data),o.initData(e),o.initPaper(),o.initBubbles(),o.initTween(),o.initHistory()},n.initData=function(e){var o=this;e.level=0,o.preprocessData(e),o.traverse(e,0),o.treeRoot=e},n.preprocessData=function(e){var o=this,t=o.config.maxNodesPerLevel;if(t&&t<e.children.length){var n=o.sortChildren(e.children);n.reverse();var a,i=[],r=[],l=0;for(var s in e.children)t>s?i.push(e.children[s]):(r.push(e.children[s]),l+=Math.max(0,e.children[s].amount));e.children=i,e.children.push({label:"More",name:"more",amount:l,children:r,breakdown:a})}},n.traverse=function(e,o){var t,n,a=this,i=a.config.bubbleStyles;if(e.children||(e.children=[]),a.nodeList.push(e),e.famount=a.ns.Utils.formatNumber(e.amount),e.parent&&(e.level=e.parent.level+1),a.config.clearColors===!0&&(e.color=!1),i){var r=["color","shortLabel","icon"];$.each(r,function(o,t){i.hasOwnProperty("id")&&i.id.hasOwnProperty(e.id)&&i.id[e.id].hasOwnProperty(t)?e[t]=i.id[e.id][t]:e.hasOwnProperty("name")&&i.hasOwnProperty("name")&&i.name.hasOwnProperty(e.name)&&i.name[e.name].hasOwnProperty(t)?e[t]=i.name[e.name][t]:e.hasOwnProperty("taxonomy")&&i.hasOwnProperty(e.taxonomy)&&i[e.taxonomy].hasOwnProperty(e.name)&&i[e.taxonomy][e.name].hasOwnProperty(t)&&(e[t]=i[e.taxonomy][e.name][t])})}for(e.color||(e.level>0?e.color=e.parent.color:e.color="#999999"),e.children.length<2&&e.color&&(e.color=vis4color.fromHex(e.color).saturation("*.86").x),e.level>0&&(t=e.parent.children,t.length>1&&(e.left=t[(o-1+t.length)%t.length],e.right=t[(Number(o)+1)%t.length],e.right==e.left&&(e.right=void 0))),n=void 0!==e.label&&""!==e.label?e.label:void 0!==e.token&&""!==e.token?e.token:""+a.globalNodeCounter,a.globalNodeCounter++,e.urlToken=n.toLowerCase().replace(/\W/g,"-");a.nodesByUrlToken.hasOwnProperty(e.urlToken);)e.urlToken+="-";a.nodesByUrlToken[e.urlToken]=e,e.maxChildAmount=0,e.children=a.sortChildren(e.children,!0,a.config.sortBy),$.each(e.children,function(o,t){t.parent=e,e.maxChildAmount=Math.max(e.maxChildAmount,t.amount),a.traverse(t,o)}),e.breakdowns&&(e.breakdownsByName={},$.each(e.breakdowns,function(o,t){t.famount=a.ns.Utils.formatNumber(t.amount),t.name&&(e.breakdownsByName[t.name]=t)}))},n.sortChildren=function(e,o,t){var a=[],i=!0;if("label"==t?(t=n.compareLabels,o=!1):t=n.compareAmounts,e.sort(t),o){for(;e.length>0;)a.push(i?e.pop():e.shift()),i=!i;return a}return e},n.compareAmounts=function(e,o){return e.amount>o.amount?1:e.amount==o.amount?0:-1},n.compareLabels=function(e,o){return e.label>o.label?1:e.label==o.label?0:-1},n.initPaper=function(){var e,o=this,t=o.$container,n=o.treeRoot,a=t.width(),i=t.height(),r=Raphael(t[0],a,i),l=.5*Math.min(a,i)-40,s=o.ns.Vector,c=new s(.5*a,.5*i);o.width=a,o.height=i,o.paper=r,e=Math.pow((Math.pow(n.amount,.6)+2*Math.pow(n.maxChildAmount,.6))/l,1.6666666667),o.a2radBase=o.ns.a2radBase=e,o.origin=c,$(window).resize(o.onResize.bind(o))},n.onResize=function(){var e,o=this,t=o.$container,n=t.width(),a=t.height(),i=.5*Math.min(n,a)-40,r=o.treeRoot;o.paper.setSize(n,a),o.origin.x=.5*n,o.origin.y=.5*a,o.width=n,o.height=a,e=Math.pow((Math.pow(r.amount,.6)+2*Math.pow(r.maxChildAmount,.6))/i,1.6666666667),o.a2radBase=o.ns.a2radBase=e,$.each(o.displayObjects,function(e,t){"bubble"==t.className&&(t.bubbleRad=o.ns.Utils.amount2rad(t.node.amount))}),o.currentCenter&&o.changeView(o.currentCenter.urlToken)},n.initTween=function(){this.tweenTimer=setInterval(this.loop,1e3/120)},n.initBubbles=function(){var e=this,o=e.treeRoot,t=!1;e.ns.Bubbles;e.bubbleClasses=[],e.config.hasOwnProperty("bubbleType")||(e.config.bubbleType=["plain"]),$.isArray(e.config.bubbleType)||(e.config.bubbleType=[e.config.bubbleType]),$.isArray(e.config.bubbleType)&&$.each(e.config.bubbleType,function(o){"icon"==e.config.bubbleType[o]&&(t=!0),e.bubbleClasses.push(e.getBubbleType(e.config.bubbleType[o]))});var n=e.createBubble(o,e.origin,0,0,o.color);e.traverseBubbles(n)},n.getBubbleType=function(e){var o=this,t=o.ns.Bubbles;switch(e){case"pie":return t.Pies;case"donut":return t.Donut;case"multi":return t.Multi;case"icon":return t.Icon;default:return t.Plain}},n.traverseBubbles=function(e){var o,t,n,a,i,r=this,l=r.ns.Utils.amount2rad,s=0,c=0,h=2*Math.PI;t=e.node.children,$.each(t,function(e,o){s+=l(o.amount)}),t.length>0&&(o=r.createRing(e.node,e.pos,0,{stroke:"#888","stroke-dasharray":"-"})),$.each(t,function(o,t){a=l(t.amount)/s*h,i=c+.5*a,isNaN(i)&&vis4.log(c,a,t.amount,s,h),t.centerAngle=i,n=r.createBubble(t,e.pos,0,i,t.color),c+=a,r.traverseBubbles(n)})},n.createBubble=function(e,o,t,n,a){var i,r=this,l=(r.ns,e.level);return isNaN(l)&&(l=0),l=Math.min(l,r.bubbleClasses.length-1),i=new r.bubbleClasses[l](e,r,o,t,n,a),r.displayObjects.push(i),i},n.createRing=function(e,o,t,n){var a,i=this,r=i.ns;return a=new r.Ring(e,i,o,t,n),i.displayObjects.push(a),a},n.changeView=function(e){var o,t,n,a=this,i=(a.paper,.35*Math.min(a.width,a.height)),r=a.ns,l=r.Utils,s=a.origin,c=l.amount2rad,h=a.treeRoot,b=a.nodesByUrlToken,d=b.hasOwnProperty(e)?b[e]:null,u=new r.Layout,p=2*Math.PI,f=a.getBubble.bind(a),v=a.getRing.bind(a),g=a.unifyAngle;if(null!==d){var m,y,w,k,x,T,M,B,C,P,O,L=!1,R=!1;for(n in a.displayObjects)a.displayObjects[n].hideFlag=!0;if(d==h||d.parent==h&&d.children.length<2){u.$(a).bubbleScale=1,u.$(s).x=.5*a.width,u.$(s).y=.5*a.height,m=f(h),d!=h&&(m.childRotation=-d.centerAngle),x=c(h.amount)+c(h.maxChildAmount)+20,C=v(h),u.$(C).rad=x;for(n in h.children)k=h.children[n],o=f(k),u.$(o).angle=g(k.centerAngle+m.childRotation),u.$(o).rad=x}else{var A=d;d.children.length<2&&(d=d.parent),P=i/(c(d.amount)+2*c(d.maxChildAmount)),u.$(a).bubbleScale=P,m=f(d),a.currentCenter&&a.currentCenter==d.left?R=!0:a.currentCenter&&a.currentCenter==d.right&&(L=!0);var U=a.shortestAngleTo;u.$(m).angle=U(m.angle,0),x=(c(d.amount)+c(d.maxChildAmount))*P+20,C=v(d),u.$(C).rad=x,y=f(d.parent),y.childRotation=-d.centerAngle;for(var N=y;N&&N.node.parent;)N=f(N.node.parent,!0),u.$(N).rad=0;u.$(y).rad=0;var E=.5*a.width;if(T=0-Math.max(.8*E-P*(c(d.parent.amount)+c(Math.max(1.15*d.amount+1.15*d.maxChildAmount,.85*d.left.amount,.85*d.right.amount))),P*c(d.parent.amount)*-1+.15*E)+E,d.left&&d.right){P*c(Math.max(d.left.amount,d.right.amount))}O=x+T,u.$(s).x=.5*a.width-T-(d!=A?.35*x:0),u.$(s).y=.5*a.height,new vis4.DelayedTask(1500,vis4,vis4.log,s,y.pos),T+=.1*a.width,C=v(d.parent),u.$(C).rad=T,u.$(m).rad=T;var I=0-(d!=A?A.centerAngle+m.childRotation:0);for(n in d.children)k=d.children[n],o=f(k),u.$(o).angle=a.shortestAngleTo(o.angle,k.centerAngle+m.childRotation+I),u.$(o).rad=x;var D=.07*a.height;d.left&&(w=d.left,M=c(w.amount)*P,B=p-Math.asin((.5*a.paper.height+M-D)/T),o=f(w),u.$(o).rad=T,u.$(o).angle=U(o.angle,B)),d.right&&(w=d.right,M=c(w.amount)*P,B=Math.asin((.5*a.paper.height+M-D)/T),o=f(w),u.$(o).rad=T,u.$(o).angle=U(o.angle,B)),d=A}for(n in a.displayObjects){var H=a.displayObjects[n];H.hideFlag&&H.visible?(u.$(H).alpha=0,"bubble"==H.className&&H.node.level>1&&(u.$(H).rad=0),u.hide(H)):H.hideFlag||(u.$(H).alpha=1,H.visible||(H.alpha=0,u.show(H)))}t=new r.Transitioner($.browser.msie||a.currentCenter==d?0:1e3),t.changeLayout(u),a.currentTransition=t,!a.currentCenter&&$.isFunction(a.config.firstNodeCallback)&&a.config.firstNodeCallback(d),a.currentCenter=d}else l.log("node "+e+" not found")},n.unifyAngle=function(e){for(var o=Math.PI,t=2*o;e>=t;)e-=t;for(;0>e;)e+=t;return e},n.shortestAngle=function(e,o){var t=Math.PI,a=2*t,i=n.unifyAngle;e=i(e),o=i(o);var r=o-e;return r>t&&(r-=a),-t>r&&(r+=a),r},n.shortestAngleTo=function(e,o){return e+n.shortestAngle(e,o)},n.shortestLeftTurn=function(e,o){var t=n.shortestAngle(e,o);return t>0&&(t-=2*Math.PI),e+t},n.shortestRightTurn=function(e,o){var t=n.shortestAngle(e,o);return 0>t&&(t=2*Math.PI+t),e+t},n.getBubble=function(e,o){return this.getDisplayObject("bubble",e,o)},n.getRing=function(e){return this.getDisplayObject("ring",e)},n.getDisplayObject=function(e,o,t){var n,a,i=this;for(n in i.displayObjects)if(a=i.displayObjects[n],a.className==e&&a.node==o)return t||(a.hideFlag=!1),a;vis4.log(e+" not found for node",o)},n.initHistory=function(){$.history.init(n.urlChanged.bind(n),{unescape:",/"})},n.freshUrl="",n.urlChanged=function(e){var o=this,t=o.currentTransition;o.freshUrl||e.indexOf("/~/")&&(o.baseUrl=e.substr(0,e.indexOf("/~/"))),o.freshUrl=e,t&&t.running?(vis4.log("transition is running at the moment, adding listener"),t.onComplete(o.changeUrl.bind(o))):o.changeUrl()},n.changeUrl=function(){var e,o=this,t=o.freshUrl.split("/"),n=t[t.length-1];""===o.freshUrl&&o.navigateTo(o.treeRoot),o.nodesByUrlToken.hasOwnProperty(n)?(e=o.getUrlForNode(o.nodesByUrlToken[n]),o.freshUrl!=e?$.history.load(e):o.navigateTo(o.nodesByUrlToken[n],!0)):o.navigateTo(o.treeRoot)},n.navigateTo=function(e,o){var t=this;o?t.changeView(e.urlToken):$.history.load(t.getUrlForNode(e)),$(".label, .label2",t.$container).removeClass("current"),$(".label2."+e.id,t.$container).addClass("current"),$(".label."+e.id,t.$container).addClass("current")},n.getUrlForNode=function(e){var o=[];for(o.push(e.urlToken);e.parent;)o.push(e.parent.urlToken),e=e.parent;return o.reverse(),n.baseUrl+"/~/"+o.join("/")},n.onNodeClick=function(e){$.isFunction(n.config.nodeClickCallback)&&n.config.nodeClickCallback(e)},n.clean=function(){$(".label").remove()},this.loop=function(){TWEEN.update()},!n.config.hasOwnProperty("data"))throw new Error("no data");"string"==typeof n.config.data?n.loadData():new vis4.DelayedTask(1e3,n,n.setData,n.config.data)};BubbleTree.Styles={},BubbleTree.Layout=function(){var e=this;e.objects=[],e.props=[],e.toHide=[],e.toShow=[],e.$=function(e){var o,t,n,a=this;for(o in a.objects)if(t=a.objects[o],t==e)return a.props[o];return a.objects.push(e),n={},a.props.push(n),n},e.show=function(e){var o=this;o.toShow.push(e)},e.hide=function(e){var o=this;o.toHide.push(e)}},BubbleTree.Line=function(e,o,t,n,a,i){this.bc=e,this.o=t,this.angle=n,this.fromRad=a,this.attr=o,this.toRad=i,this.getXY=function(){this.x1=this.o.x+Math.cos(this.angle)*this.fromRad,this.y1=this.o.y-Math.sin(this.angle)*this.fromRad,this.x2=this.o.x+Math.cos(this.angle)*this.toRad,this.y2=this.o.y-Math.sin(this.angle)*this.toRad},this.init=function(){this.getXY(),console.log("foo","M"+this.x1+" "+this.y1+"L"+this.x2+" "+this.y2,o),this.path=this.bc.paper.path("M"+this.x1+" "+this.y1+"L"+this.x2+" "+this.y2).attr(this.attr)},this.draw=function(){this.getXY(),this.path.attr({path:"M"+this.x1+" "+this.y1+"L"+this.x2+" "+this.y2})},this.init()},BubbleTree.Loader=function(e){var o=this;o.config=e,o.ns=BubbleTree,o.loadData=function(){var e=this,o=e.config.data;console.log("loading url ",o),$.ajax({url:o,context:e,dataType:"json",success:function(e){this.run(e)}})},o.run=function(e){var o=this,t=new BubbleTree(o.config);t.setData(e),o.config.instance=t},!o.config.hasOwnProperty("data"),"string"==typeof o.config.data?o.loadData():o.run(o.config.data)},BubbleTree.MouseEventGroup=function(e,o){var t=this;t.target=e,t.members=o,t.click=function(e){var o,t,n=this,a=n.members;n.clickCallback=e;for(o in a)t=a[o],$(t).click(n.handleClick.bind(n))},t.handleClick=function(e){var o=this;o.clickCallback({target:o.target,origEvent:e,mouseEventGroup:o})},t.hover=function(e){var o,t,n=this,a=n.members;n.hoverCallback=e;for(o in a)t=a[o],$(t).hover(n.handleMemberHover.bind(n),n.handleMemberUnHover.bind(n))},t.unhover=function(e){var o=this;o.unhoverCallback=e},t.wasHovering=!1,t.mouseIsOver=!1,t.handleMemberHover=function(e){var o=this;new vis4.DelayedTask(25,o,o.handleMemberHoverDelayed,e)},t.handleMemberHoverDelayed=function(e){var o=this;o.mouseIsOver=!0,o.wasHovering||(o.wasHovering=!0,$.isFunction(o.hoverCallback)&&o.hoverCallback({target:o.target,origEvent:e,mouseEventGroup:o}))},t.handleMemberUnHover=function(e){var o=this;o.mouseIsOver=!1,new vis4.DelayedTask(40,o,o.handleMemberUnHoverDelayed,e)},t.handleMemberUnHoverDelayed=function(e){var o=this;o.mouseIsOver||(o.wasHovering=!1,$.isFunction(o.unhoverCallback)&&o.unhoverCallback({target:o.target,origEvent:e,mouseEventGroup:o}))},t.addMember=function(e){var o=this;o.hoverCallback&&$(e).hover(o.handleMemberHover.bind(o),o.handleMemberUnHover.bind(o)),o.members.push(e)},t.removeMember=function(e){var o,t=this,n=t.members,a=[];t.clickCallback&&$(e).unbind("click"),t.hoverCallback&&$(e).unbind("mouseenter mouseleave");for(o in n)n[o]!=e&&a.push(n[o]);t.members=a}},BubbleTree.Ring=function(e,o,t,n,a){var i=this;i.className="ring",i.rad=n,i.bc=o,i.attr=a,i.origin=t,i.alpha=1,i.visible=!1,i.node=e,i.init=function(){},i.draw=function(){var e=this,o=e.origin;e.visible&&e.circle.attr({cx:o.x,cy:o.y,r:e.rad,"stroke-opacity":e.alpha})},i.hide=function(){var e=this;e.circle.remove(),e.visible=!1},i.show=function(){var e=this;e.circle=e.bc.paper.circle(t.x,t.y,e.rad).attr(e.attr),e.visible=!0,e.circle.toBack()},i.init()},BubbleTree.Transitioner=function(e){var o=this;o.duration=e,o.running=!1,o.completeCallbacks=[],o.changeLayout=function(e){var o,t,n,a,i=this;i.running=!0,i.layout=e;for(o in e.toShow)t=e.toShow[o],$.isFunction(t.show)&&t.show();for(o in e.objects)if(t=e.objects[o],void 0!==t&&null!==t)if(n=e.props[o],i.duration>0){var r=new TWEEN.Tween(t),l={};for(a in n)l[a]=n[a];r.to(l,i.duration),r.easing(TWEEN.Easing.Exponential.EaseOut),$.isFunction(t.draw)&&r.onUpdate(t.draw.bind(t)),o==e.objects.length-1&&r.onComplete(i._completed.bind(i)),r.start()}else{for(a in n)t[a]=n[a];t&&$.isFunction(t.draw)&&t.draw()}if(0===i.duration){for(o in e.objects)t=e.objects[o],t&&$.isFunction(t.draw)&&t.draw();i._completed()}},o.onComplete=function(e){var o=this;try{$.isFunction(e)&&o.completeCallbacks.push(e)}catch(t){}},o._completed=function(){var e,o,t=this,n=t.completeCallbacks;t.running=!1;for(e in t.layout.objects)o=t.layout.objects[e],o&&$.isFunction(o.draw)&&o.draw();for(e in t.layout.toHide)o=t.layout.toHide[e],o&&$.isFunction(o.hide)&&o.hide();for(e in n)n[e]()}},BubbleTree.Utils={},BubbleTree.Utils.log=function(){try{window.hasOwnProperty("console")&&console.log.apply(this,arguments)}catch(e){}},BubbleTree.Utils.amount2rad=function(e){return Math.pow(Math.max(0,e)/BubbleTree.a2radBase,.6)},BubbleTree.Utils.formatNumber=function(e){var o="";return 0>e&&(e=-1*e,o="-"),e>=1e12?o+Math.round(e/1e11)/10+"t":e>=1e9?o+Math.round(e/1e8)/10+"b":e>=1e6?o+Math.round(e/1e5)/10+"m":e>=1e3?o+Math.round(e/100)/10+"k":o+e},BubbleTree.Vector=function(e,o){var t=this;t.x=e,t.y=o,t.length=function(){var e=this;return Math.sqrt(e.x*e.x+e.y*e.y)},t.normalize=function(e){var o=this,t=o.length();e||(e=1),o.x*=e/t,o.y*=e/t},t.clone=function(){var e=this;return new BubbleTree.Vector(e.x,e.y)}},BubbleTree.Bubbles=BubbleTree.Bubbles||{},BubbleTree.Bubbles.Plain=function(e,o,t,n,a,i){var r=BubbleTree,l=r.Utils,s=this;s.className="bubble",s.node=e,s.paper=o.paper,s.origin=t,s.bc=o,s.rad=n,s.angle=a,s.color=i,s.alpha=1,s.visible=!1,s.ns=r,s.pos=r.Vector(0,0),s.bubbleRad=l.amount2rad(this.node.amount),s.container=s.bc.$container,s.childRotation=0,s.getXY=function(){var e=this,o=e.origin,t=e.angle,n=e.rad;void 0===e.pos&&(e.pos=new e.ns.Vector(0,0)),e.pos.x=o.x+Math.cos(t)*n,e.pos.y=o.y-Math.sin(t)*n},s.init=function(){var e=this;e.getXY();e.node.shortLabel||(e.node.shortLabel=e.node.label.length>e.bc.config.cutLabelsAt+3?e.node.label.substr(0,e.bc.config.cutLabelsAt)+"...":e.node.label),e.initialized=!0},s.onclick=function(e){var o=this;o.bc.onNodeClick(o.node),o.bc.navigateTo(o.node)},s.onhover=function(e){var o=this,t=o.bc.$container[0];e.node=o.node,e.target=o,e.bubblePos={x:o.pos.x,y:o.pos.y},e.mousePos={x:e.origEvent.pageX-t.offsetLeft,y:e.origEvent.pageY-t.offsetTop},e.type="SHOW",o.bc.tooltip(e)},s.onunhover=function(e){var o=this,t=o.bc.$container[0];e.node=o.node,e.type="HIDE",e.target=o,e.bubblePos={x:o.pos.x,y:o.pos.y},e.mousePos={x:e.origEvent.pageX-t.offsetLeft,y:e.origEvent.pageY-t.offsetTop},o.bc.tooltip(e)},s.draw=function(){var e=this,o=Math.max(5,e.bubbleRad*e.bc.bubbleScale),t=(e.pos.x,e.pos.y,e.getXY(),e.pos.x),n=e.pos.y;if(e.visible){e.circle.attr({cx:e.pos.x,cy:e.pos.y,r:o,"fill-opacity":e.alpha}),e.node.children.length>1?e.dashedBorder.attr({cx:e.pos.x,cy:e.pos.y,r:o-4,"stroke-opacity":.9*e.alpha}):e.dashedBorder.attr({"stroke-opacity":0}),e.label.show(),e.label.find("*").show(),e.label2.show(),o>=e.bc.config.minRadiusLabels?e.label2.hide():o>=e.bc.config.minRadiusAmounts?e.label.find(".desc").hide():o>=e.bc.config.minRadiusHideLabels?e.label.hide():(e.label.hide(),e.label2.hide()),e.label.css({width:2*o+"px",opacity:e.alpha}),e.label.css({left:e.pos.x-o+"px",top:e.pos.y-.5*e.label.height()+"px"});var a=Math.max(70,3*o);e.label2.css({width:a+"px",opacity:e.alpha}),e.label2.css({left:t-.5*a+"px",top:n+o+"px"})}},s.hide=function(){var e=this;e.circle.remove(),e.dashedBorder.remove(),e.label.remove(),e.label2.remove(),e.visible=!1},s.show=function(){var e=this,o=e.pos.x,t=e.pos.y,n=Math.max(5,e.bubbleRad*e.bc.bubbleScale);e.circle=e.paper.circle(o,t,n).attr({stroke:!1,fill:e.color}),e.dashedBorder=e.paper.circle(o,t,n-3).attr({stroke:"#ffffff","stroke-dasharray":"- "}),e.label=$('<div class="label '+e.node.id+'"><div class="amount">'+l.formatNumber(e.node.amount)+'</div><div class="desc">'+e.node.shortLabel+"</div></div>"),e.container.append(e.label),e.node.children.length>0&&($(e.circle.node).css({cursor:"pointer"}),$(e.label).css({cursor:"pointer"})),e.label2=$('<div class="label2 '+e.node.id+'"><span>'+e.node.shortLabel+"</span></div>"),e.container.append(e.label2);var a=[e.circle.node,e.label,e.dashedBorder.node],i=new e.ns.MouseEventGroup(e,a);i.click(e.onclick.bind(e)),i.hover(e.onhover.bind(e)),i.unhover(e.onunhover.bind(e)),e.visible=!0},s.addOverlay=function(){var e=this;e.overlay=e.paper.circle(e.circle.attrs.cx,e.circle.attrs.cy,e.circle.attrs.r).attr({stroke:!1,fill:"#fff",opacity:0}),Raphael.svg&&e.overlay.node.setAttribute("class",e.node.id),$(e.overlay.node).css({cursor:"pointer"}),$(e.overlay.node).click(e.onclick.bind(e)),$(e.label).click(e.onclick.bind(e))},s.init()},BubbleTree.Bubbles=BubbleTree.Bubbles||{},BubbleTree.Bubbles.Donut=function(e,o,t,n,a,i){var r=BubbleTree,l=r.Utils,s=this;s.className="bubble",s.node=e,s.paper=o.paper,s.origin=t,s.bc=o,s.rad=n,s.angle=a,s.color=i,s.alpha=1,s.visible=!1,s.ns=r,s.bubbleRad=l.amount2rad(this.node.amount),s.childRotation=0,s.getXY=function(){var e=this,o=e.origin,t=e.angle,n=e.rad;e.pos.x=o.x+Math.cos(t)*n,e.pos.y=o.y-Math.sin(t)*n},s.init=function(){var e=this;e.pos=new e.ns.Vector(0,0),e.getXY();var o,t,n,a=[],i=[],r=e.bc.config.bubbleStyles;e.node.shortLabel||(e.node.shortLabel=e.node.label.length>50?e.node.label.substr(0,30)+"...":e.node.label),e.breakdownOpacities=[.2,.7,.45,.6,.35],e.breakdownColors=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1];for(t in e.node.breakdowns)o=e.node.breakdowns[t],o.famount=l.formatNumber(o.amount),n=o.amount/e.node.amount,a.push(n),i.push(o),r&&r.hasOwnProperty("name")&&r.name.hasOwnProperty(o.name)&&r.name[o.name].hasOwnProperty("opacity")&&(e.breakdownOpacities[i.length-1]=r.name[o.name].opacity),r&&r.hasOwnProperty("name")&&r.name.hasOwnProperty(o.name)&&r.name[o.name].hasOwnProperty("color")&&(e.breakdownColors[i.length-1]=r.name[o.name].color,e.breakdownOpacities[i.length-1]=1);e.node.breakdowns=i,e.breakdown=a;e.initialized=!0},s.onclick=function(e){var o=this;o.bc.navigateTo(o.node)},s.onhover=function(e){var o=this,t=o.bc.$container[0];e.node=o.node,e.target=o,e.bubblePos={x:o.pos.x,y:o.pos.y},e.mousePos={x:e.origEvent.pageX-t.offsetLeft,y:e.origEvent.pageY-t.offsetTop},e.type="SHOW",o.bc.tooltip(e)},s.onunhover=function(e){var o=this,t=o.bc.$container[0];e.node=o.node,e.target=o,e.type="HIDE",e.bubblePos={x:o.pos.x,y:o.pos.y},e.mousePos={x:e.origEvent.pageX-t.offsetLeft,y:e.origEvent.pageY-t.offsetTop},o.bc.tooltip(e)},this.draw=function(){var e=this,o=Math.max(5,e.bubbleRad*e.bc.bubbleScale),t=(e.pos.x,e.pos.y,e.getXY(),o>20),n=e.pos.x,a=e.pos.y;if(e.visible){if(e.circle.attr({cx:n,cy:a,r:o,"fill-opacity":e.alpha}),e.node.children.length>1?e.dashedBorder.attr({cx:n,cy:a,r:.85*o,"stroke-opacity":.8*e.alpha}):e.dashedBorder.attr({"stroke-opacity":0}),e.breakdown.length>1){var i,r,l,s,c,h,b,d,u,p,f=.85*o,v=.5*-Math.PI;for(i in e.breakdown){p=e.breakdown[i]*Math.PI*2,r=n+Math.cos(v)*f,h=a+Math.sin(v)*f,l=n+Math.cos(v+p)*f,b=a+Math.sin(v+p)*f,s=n+Math.cos(v+p)*o,d=a+Math.sin(v+p)*o,c=n+Math.cos(v)*o,u=a+Math.sin(v)*o,v+=p;var g="M"+r+" "+h+" A"+f+","+f+" 0 "+(p>Math.PI?"1,1":"0,1")+" "+l+","+b+" L"+s+" "+d+" A"+o+","+o+" 0 "+(p>Math.PI?"1,0":"0,0")+" "+c+" "+u+" Z";e.breakdownArcs[i].attr({path:g,"stroke-opacity":.2*e.alpha,"fill-opacity":e.breakdownOpacities[i]*e.alpha})}}t?(e.label.show(),40>o?(e.label.find(".desc").hide(),e.label2.show()):(e.label.find(".desc").show(),e.label2.hide())):(e.label.hide(),e.label2.show()),e.label.css({width:2*o*.9+"px",opacity:e.alpha}),e.label.css({left:e.pos.x-.9*o+"px",top:e.pos.y-.53*e.label.height()+"px"});var m=Math.max(80,3*o);e.label2.css({width:m+"px",opacity:e.alpha}),e.label2.css({left:n-.5*m+"px",top:a+o+"px"})}},this.hide=function(){var e,o=this;o.circle.remove(),o.dashedBorder.remove(),o.label.remove(),o.label2.remove(),o.visible=!1;for(e in o.breakdownArcs)o.breakdownArcs[e].remove()},s.show=function(){var e,o=this,t=Math.max(5,o.bubbleRad*o.bc.bubbleScale);o.circle=o.paper.circle(o.pos.x,o.pos.y,t).attr({stroke:!1,fill:o.color}),$.isFunction(o.bc.config.initTooltip)&&o.bc.config.initTooltip(o.node,o.circle.node),o.dashedBorder=o.paper.circle(o.pos.x,o.pos.y,.85*t).attr({stroke:"#fff","stroke-opacity":.4*o.alpha,"stroke-dasharray":". ",fill:!1}),o.label=$('<div class="label '+o.node.id+'"><div class="amount">'+l.formatNumber(o.node.amount)+'</div><div class="desc">'+o.node.shortLabel+"</div></div>"),o.bc.$container.append(o.label),o.node.children.length>1&&($(o.circle.node).css({cursor:"pointer"}),$(o.label).css({cursor:"pointer"})),o.label2=$('<div class="label2 '+o.node.id+'"><span>'+o.node.shortLabel+"</span></div>"),o.bc.$container.append(o.label2);var n=[o.circle.node,o.label];if(o.breakdown.length>1){o.breakdownArcs={};for(e in o.breakdown){var a=o.breakdownColors[e]?o.breakdownColors[e]:"#fff",i=o.paper.path("M 0 0 L 2 2").attr({fill:a,"fill-opacity":.4*Math.random()+.3,stroke:"#fff"});o.breakdownArcs[e]=i,$.isFunction(o.bc.config.initTooltip)&&o.bc.config.initTooltip(o.node.breakdowns[e],i.node)}for(e in o.breakdownArcs)$(o.breakdownArcs[e].node).click(o.onclick.bind(o))}var r=new o.ns.MouseEventGroup(o,n);r.click(o.onclick.bind(o)),r.hover(o.onhover.bind(o)),r.unhover(o.onunhover.bind(o)),o.visible=!0},s.arcHover=function(e){var o,t=this,n=t.bc.$container[0],a=t.breakdownArcs,i=t.node.breakdowns;for(o in a)if(a[o].node==e.target)return e.node=i[o],e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.pageX-n.offsetLeft,y:e.pageY-n.offsetTop},e.target=t,e.type="SHOW",void t.bc.tooltip(e);vis4.log("cant find the breakdown node")},s.arcUnhover=function(e){var o,t=this,n=t.bc.$container[0],a=t.breakdownArcs,i=t.node.breakdowns;for(o in a)if(a[o].node==e.target)return e.node=i[o],e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.pageX-n.offsetLeft,y:e.pageY-n.offsetTop},e.type="HIDE",e.target=t,void t.bc.tooltip(e);vis4.log("cant find the breakdown node")},s.init()},BubbleTree.Bubbles=BubbleTree.Bubbles||{},BubbleTree.Bubbles.Icon=function(e,o,t,n,a,i){var r=BubbleTree,l=r.Utils,s=this;s.className="bubble",s.node=e,s.paper=o.paper,s.origin=t,s.bc=o,s.rad=n,s.angle=a,s.color=i,s.alpha=1,s.visible=!1,s.ns=r,s.pos=r.Vector(0,0),s.bubbleRad=l.amount2rad(this.node.amount),s.iconLoaded=!1,s.childRotation=0,s.getXY=function(){var e=this,o=e.origin,t=e.angle,n=e.rad;void 0===e.pos&&(e.pos=new e.ns.Vector(0,0)),e.pos.x=o.x+Math.cos(t)*n,e.pos.y=o.y-Math.sin(t)*n},s.init=function(){var e=this;e.getXY(),e.hasIcon=e.node.hasOwnProperty("icon"),e.node.shortLabel||(e.node.shortLabel=e.node.label.length>50?e.node.label.substr(0,30)+"...":e.node.label),e.initialized=!0},s.show=function(){var e=this,o=e.pos.x,t=e.pos.y,n=Math.max(5,e.bubbleRad*e.bc.bubbleScale);e.circle=e.paper.circle(o,t,n).attr({stroke:!1,fill:e.color}),e.dashedBorder=e.paper.circle(o,t,Math.min(n-3,.95*n)).attr({stroke:"#ffffff","stroke-dasharray":"- "}),$.isFunction(e.bc.config.initTooltip)&&e.bc.config.initTooltip(e.node,e.circle.node),e.label=$('<div class="label '+e.node.id+'"><div class="amount">'+l.formatNumber(e.node.amount)+'</div><div class="desc">'+e.node.shortLabel+"</div></div>"),e.bc.$container.append(e.label),$.isFunction(e.bc.config.initTooltip)&&e.bc.config.initTooltip(e.node,e.label[0]),e.label2=$('<div class="label2 '+e.node.id+'"><span>'+e.node.shortLabel+"</span></div>"),e.bc.$container.append(e.label2),e.node.children.length>0&&($(e.circle.node).css({cursor:"pointer"}),$(e.label).css({cursor:"pointer"})),e.visible=!0,e.hasIcon?e.iconLoaded?e.displayIcon():e.loadIcon():e.addOverlay()},s.loadIcon=function(){var e=this,o=new vis4loader;o.add(e.bc.config.rootPath+e.node.icon),o.load(e.iconLoadComplete.bind(e))},s.iconLoadComplete=function(e){var o,t,n,a=this;o=e.items[0].data,a.iconPathData="",o=$(o),n=$("path",o);for(t in n)n[t]&&$.isFunction(n[t].getAttribute)&&(a.iconPathData+=String(n[t].getAttribute("d"))+" ");a.iconLoaded=!0,a.displayIcon()},s.displayIcon=function(){var e,o=this;o.iconPaths=[],e=o.paper.path(o.iconPathData),e.attr({fill:"#fff",stroke:"none"}).translate(-50,-50),o.iconPaths.push(e),o.addOverlay()},s.addOverlay=function(){var e=this;if(e.overlay=e.paper.circle(e.circle.attrs.cx,e.circle.attrs.cy,e.circle.attrs.r).attr({stroke:!1,fill:"#fff","fill-opacity":0}),Raphael.svg&&e.overlay.node.setAttribute("class",e.node.id),$(e.overlay.node).css({cursor:"pointer"}),$(e.overlay.node).click(e.onclick.bind(e)),$(e.label).click(e.onclick.bind(e)),$(e.label2).click(e.onclick.bind(e)),$.isPlainObject(e.bc.tooltip)){var o=e.bc.tooltip.content(e.node);$(e.overlay.node).qtip({position:{target:"mouse",viewport:$(window),adjust:{x:7,y:7}},show:{delay:e.bc.tooltip.delay||100},content:{title:o[0],text:o[1]}})}},s.removeIcon=function(){var e,o=this;for(e in o.iconPaths)o.iconPaths[e].remove();o.iconPaths=[]},s.draw=function(){var e,o,t,n,a,i=this,r=Math.max(5,i.bubbleRad*i.bc.bubbleScale),l=(i.pos.x,i.pos.y,i.getXY(),i.pos.x),s=i.pos.y,c=i.hasIcon&&r>15,h=i.hasIcon?r>40:r>20;if(i.visible){i.circle.attr({cx:l,cy:s,r:r,"fill-opacity":i.alpha}),i.overlay&&i.overlay.attr({cx:l,cy:s,r:Math.max(10,r)}),i.node.children.length>1?i.dashedBorder.attr({cx:i.pos.x,cy:i.pos.y,r:Math.min(r-3,r-4),"stroke-opacity":.9*i.alpha}):i.dashedBorder.attr({"stroke-opacity":0}),h?(i.label.show(),c&&70>r||!c&&40>r?(i.label.find(".desc").hide(),i.label2.show()):(i.label.find(".desc").show(),i.label2.hide())):(i.label.hide(),i.label2.show()),a=c?s+.77*r-i.label.height():s-.5*i.label.height(),i.label.css({width:(c?1.2*r:2*r)+"px",opacity:i.alpha}),i.label.css({left:(c?l-.6*r:l-r)+"px",top:a+"px"});var b=Math.max(80,3*r);if(i.label2.css({width:b+"px",opacity:i.alpha}),i.label2.css({left:l-.5*b+"px",top:s+r+"px"}),i.hasIcon)if(c){t=(r-(h?.5*i.label.height():0))/60;for(e in i.iconPaths)o=i.iconPaths[e],n="1"==Raphael.version[0]?"scale("+t+") translate("+l/t+", "+(s+(h?i.label.height()*-.5:0))/t+")":"scale("+t+") translate("+(l/t-50)+", "+((s+(h?i.label.height()*-.5:0))/t-50)+")",o.node.setAttribute("transform",n),o.attr({"fill-opacity":i.alpha})}else for(e in i.iconPaths)o=i.iconPaths[e],o.attr({"fill-opacity":0})}},s.hide=function(){var e=this;e.circle.remove(),e.dashedBorder.remove(),e.label.remove(),e.label2.remove(),e.visible=!1,e.hasIcon&&e.removeIcon(),e.overlay&&e.overlay.remove()},s.onclick=function(e){var o=this;o.bc.onNodeClick(o.node),o.bc.navigateTo(o.node)},s.onhover=function(e){var o=this,t=o.bc.$container[0];e.node=o.node,e.bubblePos={x:o.pos.x,y:o.pos.y},e.mousePos={x:e.origEvent.pageX-t.offsetLeft,y:e.origEvent.pageY-t.offsetTop},e.type="SHOW",e.target=o,o.bc.tooltip(e)},s.onunhover=function(e){var o=this,t=o.bc.$container[0];e.node=o.node,e.type="HIDE",e.target=o,e.bubblePos={x:o.pos.x,y:o.pos.y},e.mousePos={x:e.origEvent.pageX-t.offsetLeft,y:e.origEvent.pageY-t.offsetTop},o.bc.tooltip(e)},s.init()};
//# sourceMappingURL=data:application/json;base64,
