if("object"==typeof module&&"object"==typeof module.exports)var $=require("jquery"),Raphael=require("webpack-raphael"),TWEEN=require("tween.js");var vis4=function(){};vis4.log=function(){try{null!==window.console&&console.log.apply(this,arguments)}catch(t){}},vis4.str2time=function(t){var e=t.split(".");return Math.round(.001*Date.UTC(2e3+e[0],e[1]-1,e[2]))},vis4.round=function(t,e){var i=Math.pow(10,e);return Math.round(t*i)/i},vis4.formatNumber_ksep=".",vis4.formatNumber_dsep=",",vis4.formatNumber=function(t,e){t=""+t;for(var i="",n=0,o=t.length-1;o>=0;o--)n>0&&n<t.length&&n%3==0&&(i=vis4.formatNumber_ksep+i),i=t[o]+i,n++;return i},vis4.parseTSV=function(t,e){var i,n,o=t.split("\n"),s=[];for(n=0;n<o.length;n++){var a=o[n];if(""!==a)if(e)if(0===n)i=a.split("	");else{var r={},h=a.split("	");if(h.length!=i.length)return"wrong tsv format";for(var l=0;l<i.length;l++)r[$.trim(i[l])]=$.trim(h[l]);s.push(r)}else s.push(a.split("	"))}return s},vis4.map=function(t,e){for(var i={},n=0;n<t.length;n++)i[t[n][e]]=t[n];return i},vis4.DelayedTask=function(){var t=this;t.init=function(t){var e=this,i=[];for(var n in t)n>2&&i.push(t[n]);e.func=t[2],e.scope=t[1],e.args=i,e.running=!0,e.timer=window.setTimeout(this.run.bind(e),t[0])},t.run=function(){var t=this;t.func.apply(t.scope,t.args),t.running=!1},t.cancel=function(){vis4.log("canceling timer",this),window.clearTimeout(this.timer),this.running=!1},t.init(arguments)};var vis4loadingItem=function(t,e,i,n){this.url=t,this.id=e,this.type=i,this.loader=n,this.load=function(){$.get(this.url,this.processContent.bind(this))},this.processContent=function(t){"tsv"==this.type?this.data=vis4.parseTSV(t,!0):"json"==this.type?this.data="string"==typeof t?$.parseJSON(t):t:this.data=t,this.loader.itemLoaded()}},vis4loader=function(){this.items=[],this.byID={},this.add=function(t,e,i){null===i&&(i="text");var n=new vis4loadingItem(t,e,i,this);this.items.push(n),this.byID[e]=n},this.load=function(t){this.callback=t,this.loaded=0;for(var e=0;e<this.items.length;e++)this.items[e].load()},this.itemLoaded=function(){this.loaded++,this.loaded==this.items.length&&this.callback(this)},this.get=function(t){return this.byID[t].data}},vis4color=function(t){this.h=0,this.s=.5,this.l=.8,this.v=1,this.i=1,this.r=255,this.g=0,this.b=0,this.x="#FF0000",this.u=0,this.br=1,this.K=1/180*Math.PI,("hsi"==t||"hsl"==t||"hsb"==t||"hsv"==t)&&(this.mode=t),this.log=function(t){null!==window.console&&console.log(t)},this.cos=function(t){return Math.cos(t*this.K)},this.trim=function(t){return Math.max(0,Math.min(1,t))},this.setMode=function(t){"hsv"!=t&&"hsi"!=t&&"hsl"!=t&&"hsb"!=t&&this.log("unknown color mode "+t),this.mode=t,this.rgb2hsx()},this.setHexColor=function(t){"#"!=t.charAt(0)&&(t="#"+t),4==t.length&&(t="#"+t.charAt(1)+t.charAt(1)+t.charAt(2)+t.charAt(2)+t.charAt(3)+t.charAt(3)),7!=t.length&&this.log("invalid hex color"),this.x=t,this.hex2int(),this.int2rgb(),this.rgb2hsx()},this.setRGBColor=function(t,e,i){this.r=t,this.b=i,this.g=e,this.rgb2int(),this.int2hex(),this.rgb2hsx()},this.setHSVColor=function(t,e,i){"hsv"!=this.mode&&(this.mode="hsv"),this.h=t,this.s=this.trim(e),this.v=this.trim(i),this.hsv2rgb(),this.rgb2int(),this.int2hex()},this.setHSLColor=function(t,e,i){"hsl"!=this.mode&&(this.mode="hsl"),this.h=t,this.s=this.trim(e),this.l=this.trim(i),this.hsl2rgb(),this.rgb2int(),this.int2hex()},this.setHSBColor=function(t,e,i){"hsb"!=this.mode&&(this.mode="hsb"),this.h=t,this.s=this.trim(e),this.b=this.trim(i),this.hsb2rgb(),this.rgb2int(),this.int2hex()},this.setHSIColor=function(t,e,i){"hsi"!=this.mode&&(this.mode="hsi"),this.h=t,this.s=this.trim(e),this.i=this.trim(i),this.hsi2rgb(),this.rgb2int(),this.int2hex()},this.onChange=function(){},this.rgb2int=function(){this.u=this.r<<16|this.g<<8|this.b,this.onChange()},this.int2rgb=function(){this.r=this.u>>16,this.g=this.u>>8&255,this.b=255&this.u},this.hex2int=function(){this.u=parseInt(this.x.substr(1),16),this.onChange()},this.int2hex=function(){var t="000000"+this.u.toString(16).toUpperCase();this.x="#"+t.substr(t.length-6),this.onChange()},this.int2rgb=function(){this.r=this.u>>16,this.g=this.u>>8&255,this.b=255&this.u},this.hsx2rgb=function(){switch(this.mode){case"hsv":this.hsv2rgb();break;case"hsi":this.hsi2rgb();break;case"hsl":this.hsl2rgb();break;case"hsb":this.hsb2rgb()}},this.rgb2hsx=function(){switch(this.mode){case"hsv":this.rgb2hsv();break;case"hsi":this.rgb2hsi();break;case"hsl":this.rgb2hsl();break;case"hsb":this.rgb2hsb()}},this.hue=function(t){return this._evaluate(t,"h"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this},this.saturation=function(t){return this._evaluate(t,"s"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this},this.lightness=function(t){return"hsl"!=this.mode?void this.log("WARNING: lightness property not available in "+this.mode+" mode"):(this._evaluate(t,"l"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this)},this.brightness=function(t){return"hsb"!=this.mode?void this.log("WARNING: brightness property not available in "+this.mode+" mode"):(this._evaluate(t,"br"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this)},this.value=function(t){return"hsv"!=this.mode?void this.log("WARNING: value property not available in "+this.mode+" mode"):(this._evaluate(t,"v"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this)},this.intensity=function(t){return"hsi"!=this.mode?void this.log("WARNING: intensity property not available in "+this.mode+" mode"):(this._evaluate(t,"i"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this)},this._evaluate=function(t,e){"string"==typeof t?("+"!=t.charAt(0)||isNaN(t.substr(1))?"-"!=t.charAt(0)||isNaN(t.substr(1))||(this[e]=this[e]-Number(t.substr(1))):this[e]=Number(this[e])+Number(t.substr(1)),"*"!=t.charAt(0)||isNaN(t.substr(1))?"/"!=t.charAt(0)||isNaN(t.substr(1))||(this[e]=this[e]/Number(t.substr(1))):this[e]=this[e]*Number(t.substr(1))):isNaN(t)||(this[e]=Number(t))},this.rgb=function(){return[this.r,this.g,this.b]},this.hsl=function(){return[this.h,this.s,this.l]},this.rgb2hsv=function(){var t=Math.min(Math.min(this.r,this.g),this.b),e=Math.max(Math.max(this.r,this.g),this.b),i=e-t;this.v=e/255,this.s=i/e,0===this.s?this.h=void 0:(this.r==e&&(this.h=(this.g-this.b)/i),this.g==e&&(this.h=2+(this.b-this.r)/i),this.b==e&&(this.h=4+(this.r-this.g)/i),this.h*=60,this.h<0&&(this.h+=360))},this.hsv2rgb=function(){var t,e,i,n,o,s=this.h,a=this.s,r=this._rgb,h=255*this.v;if(0===this.s&&isNaN(s))this.r=this.g=this.b=h;else switch(360==s&&(s=0),s/=60,t=Math.floor(s),e=s-t,i=h*(1-a),n=h*(1-a*e),o=h*(1-a*(1-e)),t){case 0:r(h,o,i);break;case 1:r(n,h,i);break;case 2:r(i,h,o);break;case 3:r(i,n,h);break;case 4:r(o,i,h);break;case 5:r(h,i,n)}},this._rgb=function(t,e,i){this.r=t,this.g=e,this.b=i},this.rgb2hsl=function(){var t=this.r/255,e=this.g/255,i=this.b/255,n=Math.min(Math.min(t,e),i),o=Math.max(Math.max(t,e),i);this.l=(o+n)/2,o==n?(this.s=0,this.h=void 0):this.l<.5?this.s=(o-n)/(o+n):this.s=(o-n)/(2-o-n),t==o?this.h=(e-i)/(o-n):e==o?this.h=2+(i-t)/(o-n):i==o&&(this.h=4+(t-e)/(o-n)),this.h*=60,this.h<0&&(this.h+=360)},this.hsl2rgb=function(){if(0===this.s)this.r=this.g=this.b=255*this.l;else{var t,e,i=[0,0,0],n=[0,0,0];e=this.l<.5?this.l*(1+this.s):this.l+this.s-this.l*this.s,t=2*this.l-e;var o=this.h/360;i[0]=o+1/3,i[1]=o,i[2]=o-1/3;for(var s=0;3>s;s++)i[s]<0&&(i[s]+=1),i[s]>1&&(i[s]-=1),6*i[s]<1?n[s]=t+6*(e-t)*i[s]:2*i[s]<1?n[s]=e:3*i[s]<2?n[s]=t+(e-t)*(2/3-i[s])*6:n[s]=t;this.r=255*n[0],this.g=255*n[1],this.b=255*n[2]}},this.rgb2hsb=function(){this.rgb2hsl(),this.br=this._rgbLuminance()},this._rgbLuminance=function(){return(.2126*this.r+.7152*this.g+.0722*this.b)/255},this.hsb2rgb=function(){var t,e=.001,i=0,n=1,o=.5;this.l=o,this.hsl2rgb(),t=this._rgbLuminance();for(var s=0;Math.abs(t-this.br)>e&&100>s;)t>this.br?n=o:i=o,o=(i+n)/2,this.l=o,this.hsl2rgb(),t=this._rgbLuminance(),s++;this.br=t},this.rgb2hsi=function(){var t,e=this.r,i=this.g,n=this.b,o=(Math.max(Math.max(e,i),n),e+i+n);e/=o,i/=o,n/=o,t=Math.min(Math.min(e,i),n),this.i=(e+i+n)/765,this.h=this.acos((e-.5*i-.5*n)/Math.sqrt((e-i)*(e-i)+(e-n)*(i-n))),this.s=1-3*t,n>i&&(this.h=360-this.h)},this.hsi2rgb=function(){var t,e,i,n=this.h,o=this.i,s=this.s,a=this.cos;120>=n?(e=(1-s)/3,t=(1+s*a(n)/a(60-n))/3,i=1-(e+t)):240>=n?(n-=120,t=(1-s)/3,i=(1+s*a(n)/a(60-n))/3,e=1-(t+i)):(n-=240,i=(1-s)/3,e=(1+s*a(n)/a(60-n))/3,t=1-(i+e)),t=Math.min(255,t*o*3*255),i=Math.min(255,i*o*3*255),e=Math.min(255,e*o*3*255)}};vis4color.fromHex=function(t,e){null==e&&(e="hsl");var i=new vis4color(e);return i.setHexColor(t),i},vis4color.fromRGB=function(t,e,i,n){null===n&&(n="hsl");var o=new vis4color(n);return o.setRGBolor(t,e,i),o},vis4color.fromHSV=function(t,e,i,n){null===n&&(n="hsl");var o=new vis4color(n);return o.setHSVColor(t,e,i),o},vis4color.fromHSL=function(t,e,i,n){null===n&&(n="hsl");var o=new vis4color(n);return o.setHSLColor(t,e,i),o},vis4color.fromHSB=function(t,e,i,n){null===n&&(n="hsl");var o=new vis4color(n);return o.setHSBColor(t,e,i),o},vis4color.fromHSI=function(t,e,i,n){null===n&&(n="hsl");var o=new vis4color(n);return o.setHSIColor(t,e,i),o};var BubbleTree=function(t,e,i){var n=$.history||{callback:null,options:null,init:function(t,e){this.callback=t,this.options=e,this.load("/")},load:function(t){"function"==typeof this.callback&&this.callback(t)}},o=this;if(o.version="2.0.2",o.$container=$(t.container),o.config=$.extend({rootPath:"",minRadiusLabels:40,minRadiusAmounts:20,minRadiusHideLabels:0,cutLabelsAt:50},t),o.tooltip=t.tooltipCallback?t.tooltipCallback:function(){},t.tooltip&&(o.tooltip=t.tooltip),o.style=t.bubbleStyles,o.ns=BubbleTree,o.nodesByUrlToken={},o.nodeList=[],o.iconsByUrlToken={},o.globalNodeCounter=0,o.displayObjects=[],o.bubbleScale=1,o.globRotation=0,o.currentYear=t.initYear,o.currentCenter=void 0,o.currentTransition=void 0,o.baseUrl="",o.loadData=function(t){$.ajax({url:t,dataType:"json",success:this.setData.bind(this)})},o.setData=function(t){var e=this;t||(t=e.config.data),e.initData(t),e.initPaper(),e.initBubbles(),e.initTween(),e.initHistory()},o.initData=function(t){var e=this;t.level=0,e.preprocessData(t),e.traverse(t,0),e.treeRoot=t},o.preprocessData=function(t){var e=this,i=e.config.maxNodesPerLevel;if(i&&i<t.children.length){var n=e.sortChildren(t.children);n.reverse();var o,s=[],a=[],r=0;for(var h in t.children)i>h?s.push(t.children[h]):(a.push(t.children[h]),r+=Math.max(0,t.children[h].amount));t.children=s,t.children.push({label:"More",name:"more",amount:r,children:a,breakdown:o})}},o.traverse=function(t,e){var i,n,o=this,s=o.config.bubbleStyles;if(t.children||(t.children=[]),o.nodeList.push(t),t.famount=o.ns.Utils.formatNumber(t.amount),t.parent&&(t.level=t.parent.level+1),o.config.clearColors===!0&&(t.color=!1),s){var a=["color","shortLabel","icon"];$.each(a,function(e,i){s.hasOwnProperty("id")&&s.id.hasOwnProperty(t.id)&&s.id[t.id].hasOwnProperty(i)?t[i]=s.id[t.id][i]:t.hasOwnProperty("name")&&s.hasOwnProperty("name")&&s.name.hasOwnProperty(t.name)&&s.name[t.name].hasOwnProperty(i)?t[i]=s.name[t.name][i]:t.hasOwnProperty("taxonomy")&&s.hasOwnProperty(t.taxonomy)&&s[t.taxonomy].hasOwnProperty(t.name)&&s[t.taxonomy][t.name].hasOwnProperty(i)&&(t[i]=s[t.taxonomy][t.name][i])})}for(t.color||(t.level>0?t.color=t.parent.color:t.color="#999999"),t.children.length<2&&t.color&&(t.color=vis4color.fromHex(t.color).saturation("*.86").x),t.level>0&&(i=t.parent.children,i.length>1&&(t.left=i[(e-1+i.length)%i.length],t.right=i[(Number(e)+1)%i.length],t.right==t.left&&(t.right=void 0))),n=void 0!==t.label&&""!==t.label?t.label:void 0!==t.token&&""!==t.token?t.token:""+o.globalNodeCounter,o.globalNodeCounter++,t.urlToken=n.toLowerCase().replace(/\W/g,"-");o.nodesByUrlToken.hasOwnProperty(t.urlToken);)t.urlToken+="-";o.nodesByUrlToken[t.urlToken]=t,t.maxChildAmount=0,t.children=o.sortChildren(t.children,!0,o.config.sortBy),$.each(t.children,function(e,i){i.parent=t,t.maxChildAmount=Math.max(t.maxChildAmount,i.amount),o.traverse(i,e)}),t.breakdowns&&(t.breakdownsByName={},$.each(t.breakdowns,function(e,i){i.famount=o.ns.Utils.formatNumber(i.amount),i.name&&(t.breakdownsByName[i.name]=i)}))},o.sortChildren=function(t,e,i){var n=[],s=!0;if("label"==i?(i=o.compareLabels,e=!1):i=o.compareAmounts,t.sort(i),e){for(;t.length>0;)n.push(s?t.pop():t.shift()),s=!s;return n}return t},o.compareAmounts=function(t,e){return t.amount>e.amount?1:t.amount==e.amount?0:-1},o.compareLabels=function(t,e){return t.label>e.label?1:t.label==e.label?0:-1},o.initPaper=function(){var t,e=this,i=e.$container,n=e.treeRoot,o=i.width(),s=i.height(),a=Raphael(i[0],o,s),r=.5*Math.min(o,s)-40,h=e.ns.Vector,l=new h(.5*o,.5*s);e.width=o,e.height=s,e.paper=a,t=Math.pow((Math.pow(n.amount,.6)+2*Math.pow(n.maxChildAmount,.6))/r,1.6666666667),e.a2radBase=e.ns.a2radBase=t,e.origin=l,$(window).resize(e.onResize.bind(e))},o.onResize=function(){var t,e=this,i=e.$container,n=i.width(),o=i.height(),s=.5*Math.min(n,o)-40,a=e.treeRoot;e.paper.setSize(n,o),e.origin.x=.5*n,e.origin.y=.5*o,e.width=n,e.height=o,t=Math.pow((Math.pow(a.amount,.6)+2*Math.pow(a.maxChildAmount,.6))/s,1.6666666667),e.a2radBase=e.ns.a2radBase=t,$.each(e.displayObjects,function(t,i){"bubble"==i.className&&(i.bubbleRad=e.ns.Utils.amount2rad(i.node.amount))}),e.currentCenter&&e.changeView(e.currentCenter.urlToken)},o.initTween=function(){this.tweenTimer=setInterval(this.loop,1e3/120)},o.initBubbles=function(){var t=this,e=t.treeRoot,i=!1;t.ns.Bubbles;t.bubbleClasses=[],t.config.hasOwnProperty("bubbleType")||(t.config.bubbleType=["plain"]),$.isArray(t.config.bubbleType)||(t.config.bubbleType=[t.config.bubbleType]),$.isArray(t.config.bubbleType)&&$.each(t.config.bubbleType,function(e){"icon"==t.config.bubbleType[e]&&(i=!0),t.bubbleClasses.push(t.getBubbleType(t.config.bubbleType[e]))});var n=t.createBubble(e,t.origin,0,0,e.color);t.traverseBubbles(n)},o.getBubbleType=function(t){var e=this,i=e.ns.Bubbles;switch(t){case"pie":return i.Pies;case"donut":return i.Donut;case"multi":return i.Multi;case"icon":return i.Icon;default:return i.Plain}},o.traverseBubbles=function(t){var e,i,n,o,s,a=this,r=a.ns.Utils.amount2rad,h=0,l=0,c=2*Math.PI;i=t.node.children,$.each(i,function(t,e){h+=r(e.amount)}),i.length>0&&(e=a.createRing(t.node,t.pos,0,{stroke:"#888","stroke-dasharray":"-"})),$.each(i,function(e,i){o=r(i.amount)/h*c,s=l+.5*o,isNaN(s)&&vis4.log(l,o,i.amount,h,c),i.centerAngle=s,n=a.createBubble(i,t.pos,0,s,i.color),l+=o,a.traverseBubbles(n)})},o.createBubble=function(t,e,i,n,o){var s,a=this,r=(a.ns,t.level);return isNaN(r)&&(r=0),r=Math.min(r,a.bubbleClasses.length-1),s=new a.bubbleClasses[r](t,a,e,i,n,o),a.displayObjects.push(s),s},o.createRing=function(t,e,i,n){var o,s=this,a=s.ns;return o=new a.Ring(t,s,e,i,n),s.displayObjects.push(o),o},o.changeView=function(t){var e,i,n,o=this,s=(o.paper,.35*Math.min(o.width,o.height)),a=o.ns,r=a.Utils,h=o.origin,l=r.amount2rad,c=o.treeRoot,b=o.nodesByUrlToken,u=b.hasOwnProperty(t)?b[t]:null,d=new a.Layout,p=2*Math.PI,f=o.getBubble.bind(o),v=o.getRing.bind(o),g=o.unifyAngle;if(null!==u){var m,y,w,x,k,M,T,C,B,P,N,A=!1,L=!1;for(n in o.displayObjects)o.displayObjects[n].hideFlag=!0;if(u==c||u.parent==c&&u.children.length<2){d.$(o).bubbleScale=1,d.$(h).x=.5*o.width,d.$(h).y=.5*o.height,m=f(c),u!=c&&(m.childRotation=-u.centerAngle),k=l(c.amount)+l(c.maxChildAmount)+20,B=v(c),d.$(B).rad=k;for(n in c.children)x=c.children[n],e=f(x),d.$(e).angle=g(x.centerAngle+m.childRotation),d.$(e).rad=k}else{var O=u;u.children.length<2&&(u=u.parent),P=s/(l(u.amount)+2*l(u.maxChildAmount)),d.$(o).bubbleScale=P,m=f(u),o.currentCenter&&o.currentCenter==u.left?L=!0:o.currentCenter&&o.currentCenter==u.right&&(A=!0);var R=o.shortestAngleTo;d.$(m).angle=R(m.angle,0),k=(l(u.amount)+l(u.maxChildAmount))*P+20,B=v(u),d.$(B).rad=k,y=f(u.parent),y.childRotation=-u.centerAngle;for(var I=y;I&&I.node.parent;)I=f(I.node.parent,!0),d.$(I).rad=0;d.$(y).rad=0;var H=.5*o.width;if(M=0-Math.max(.8*H-P*(l(u.parent.amount)+l(Math.max(1.15*u.amount+1.15*u.maxChildAmount,.85*u.left.amount,.85*u.right.amount))),P*l(u.parent.amount)*-1+.15*H)+H,u.left&&u.right){P*l(Math.max(u.left.amount,u.right.amount))}N=k+M,d.$(h).x=.5*o.width-M-(u!=O?.35*k:0),d.$(h).y=.5*o.height,new vis4.DelayedTask(1500,vis4,vis4.log,h,y.pos),M+=.1*o.width,B=v(u.parent),d.$(B).rad=M,d.$(m).rad=M;var U=0-(u!=O?O.centerAngle+m.childRotation:0);for(n in u.children)x=u.children[n],e=f(x),d.$(e).angle=o.shortestAngleTo(e.angle,x.centerAngle+m.childRotation+U),d.$(e).rad=k;var S=.07*o.height;u.left&&(w=u.left,T=l(w.amount)*P,C=p-Math.asin((.5*o.paper.height+T-S)/M),e=f(w),d.$(e).rad=M,d.$(e).angle=R(e.angle,C)),u.right&&(w=u.right,T=l(w.amount)*P,C=Math.asin((.5*o.paper.height+T-S)/M),e=f(w),d.$(e).rad=M,d.$(e).angle=R(e.angle,C)),u=O}for(n in o.displayObjects){var j=o.displayObjects[n];j.hideFlag&&j.visible?(d.$(j).alpha=0,"bubble"==j.className&&j.node.level>1&&(d.$(j).rad=0),d.hide(j)):j.hideFlag||(d.$(j).alpha=1,j.visible||(j.alpha=0,d.show(j)))}i=new a.Transitioner(o.currentCenter==u?0:1e3),i.changeLayout(d),o.currentTransition=i,!o.currentCenter&&$.isFunction(o.config.firstNodeCallback)&&o.config.firstNodeCallback(u),o.currentCenter=u}else r.log("node "+t+" not found")},o.unifyAngle=function(t){for(var e=Math.PI,i=2*e;t>=i;)t-=i;for(;0>t;)t+=i;return t},o.shortestAngle=function(t,e){var i=Math.PI,n=2*i,s=o.unifyAngle;t=s(t),e=s(e);var a=e-t;return a>i&&(a-=n),-i>a&&(a+=n),a},o.shortestAngleTo=function(t,e){return t+o.shortestAngle(t,e)},o.shortestLeftTurn=function(t,e){var i=o.shortestAngle(t,e);return i>0&&(i-=2*Math.PI),t+i},o.shortestRightTurn=function(t,e){var i=o.shortestAngle(t,e);return 0>i&&(i=2*Math.PI+i),t+i},o.getBubble=function(t,e){return this.getDisplayObject("bubble",t,e)},o.getRing=function(t){return this.getDisplayObject("ring",t)},o.getDisplayObject=function(t,e,i){var n,o,s=this;for(n in s.displayObjects)if(o=s.displayObjects[n],o.className==t&&o.node==e)return i||(o.hideFlag=!1),o;vis4.log(t+" not found for node",e)},o.initHistory=function(){n.init(o.urlChanged.bind(o),{unescape:",/"})},o.freshUrl="",o.urlChanged=function(t){var e=this,i=e.currentTransition;e.freshUrl||t.indexOf("/~/")&&(e.baseUrl=t.substr(0,t.indexOf("/~/"))),e.freshUrl=t,i&&i.running?(vis4.log("transition is running at the moment, adding listener"),i.onComplete(e.changeUrl.bind(e))):e.changeUrl()},o.changeUrl=function(){var t,e=this,i=e.freshUrl.split("/"),o=i[i.length-1];""===e.freshUrl&&e.navigateTo(e.treeRoot),e.nodesByUrlToken.hasOwnProperty(o)?(t=e.getUrlForNode(e.nodesByUrlToken[o]),e.freshUrl!=t?n.load(t):e.navigateTo(e.nodesByUrlToken[o],!0)):e.navigateTo(e.treeRoot)},o.navigateTo=function(t,e){var i=this;e?i.changeView(t.urlToken):n.load(i.getUrlForNode(t)),$(".label, .label2",i.$container).removeClass("current"),$(".label2."+t.id,i.$container).addClass("current"),$(".label."+t.id,i.$container).addClass("current")},o.getUrlForNode=function(t){var e=[];for(e.push(t.urlToken);t.parent;)e.push(t.parent.urlToken),t=t.parent;return e.reverse(),o.baseUrl+"/~/"+e.join("/")},o.onNodeClick=function(t){$.isFunction(o.config.nodeClickCallback)&&o.config.nodeClickCallback(t)},o.clean=function(){$(".label").remove()},this.loop=function(){TWEEN.update()},!o.config.hasOwnProperty("data"))throw new Error("no data");"string"==typeof o.config.data?o.loadData():new vis4.DelayedTask(1e3,o,o.setData,o.config.data)};BubbleTree.Styles={},BubbleTree.Layout=function(){var t=this;t.objects=[],t.props=[],t.toHide=[],t.toShow=[],t.$=function(t){var e,i,n,o=this;for(e in o.objects)if(i=o.objects[e],i==t)return o.props[e];return o.objects.push(t),n={},o.props.push(n),n},t.show=function(t){var e=this;e.toShow.push(t)},t.hide=function(t){var e=this;e.toHide.push(t)}},BubbleTree.Line=function(t,e,i,n,o,s){this.bc=t,this.o=i,this.angle=n,this.fromRad=o,this.attr=e,this.toRad=s,this.getXY=function(){this.x1=this.o.x+Math.cos(this.angle)*this.fromRad,this.y1=this.o.y-Math.sin(this.angle)*this.fromRad,this.x2=this.o.x+Math.cos(this.angle)*this.toRad,this.y2=this.o.y-Math.sin(this.angle)*this.toRad},this.init=function(){this.getXY(),console.log("foo","M"+this.x1+" "+this.y1+"L"+this.x2+" "+this.y2,e),this.path=this.bc.paper.path("M"+this.x1+" "+this.y1+"L"+this.x2+" "+this.y2).attr(this.attr)},this.draw=function(){this.getXY(),this.path.attr({path:"M"+this.x1+" "+this.y1+"L"+this.x2+" "+this.y2})},this.init()},BubbleTree.Loader=function(t){var e=this;e.config=t,e.ns=BubbleTree,e.loadData=function(){var t=this,e=t.config.data;console.log("loading url ",e),$.ajax({url:e,context:t,dataType:"json",success:function(t){this.run(t)}})},e.run=function(t){var e=this,i=new BubbleTree(e.config);i.setData(t),e.config.instance=i},!e.config.hasOwnProperty("data"),"string"==typeof e.config.data?e.loadData():e.run(e.config.data)},BubbleTree.MouseEventGroup=function(t,e){var i=this;i.target=t,i.members=e,i.click=function(t){var e,i,n=this,o=n.members;n.clickCallback=t;for(e in o)i=o[e],$(i).click(n.handleClick.bind(n))},i.handleClick=function(t){var e=this;e.clickCallback({target:e.target,origEvent:t,mouseEventGroup:e})},i.hover=function(t){var e,i,n=this,o=n.members;n.hoverCallback=t;for(e in o)i=o[e],$(i).hover(n.handleMemberHover.bind(n),n.handleMemberUnHover.bind(n))},i.unhover=function(t){var e=this;e.unhoverCallback=t},i.wasHovering=!1,i.mouseIsOver=!1,i.handleMemberHover=function(t){var e=this;new vis4.DelayedTask(25,e,e.handleMemberHoverDelayed,t)},i.handleMemberHoverDelayed=function(t){var e=this;e.mouseIsOver=!0,e.wasHovering||(e.wasHovering=!0,$.isFunction(e.hoverCallback)&&e.hoverCallback({target:e.target,origEvent:t,mouseEventGroup:e}))},i.handleMemberUnHover=function(t){var e=this;e.mouseIsOver=!1,new vis4.DelayedTask(40,e,e.handleMemberUnHoverDelayed,t)},i.handleMemberUnHoverDelayed=function(t){var e=this;e.mouseIsOver||(e.wasHovering=!1,$.isFunction(e.unhoverCallback)&&e.unhoverCallback({target:e.target,origEvent:t,mouseEventGroup:e}))},i.addMember=function(t){var e=this;e.hoverCallback&&$(t).hover(e.handleMemberHover.bind(e),e.handleMemberUnHover.bind(e)),e.members.push(t)},i.removeMember=function(t){var e,i=this,n=i.members,o=[];i.clickCallback&&$(t).unbind("click"),i.hoverCallback&&$(t).unbind("mouseenter mouseleave");for(e in n)n[e]!=t&&o.push(n[e]);i.members=o}},BubbleTree.Ring=function(t,e,i,n,o){var s=this;s.className="ring",s.rad=n,s.bc=e,s.attr=o,s.origin=i,s.alpha=1,s.visible=!1,s.node=t,s.init=function(){},s.draw=function(){var t=this,e=t.origin;t.visible&&t.circle.attr({cx:e.x,cy:e.y,r:t.rad,"stroke-opacity":t.alpha})},s.hide=function(){var t=this;t.circle.remove(),t.visible=!1},s.show=function(){var t=this;t.circle=t.bc.paper.circle(i.x,i.y,t.rad).attr(t.attr),t.visible=!0,t.circle.toBack()},s.init()},BubbleTree.Transitioner=function(t){var e=this;e.duration=t,e.running=!1,e.completeCallbacks=[],e.changeLayout=function(t){var e,i,n,o,s=this;s.running=!0,s.layout=t;for(e in t.toShow)i=t.toShow[e],$.isFunction(i.show)&&i.show();for(e in t.objects)if(i=t.objects[e],void 0!==i&&null!==i)if(n=t.props[e],s.duration>0){var a=new TWEEN.Tween(i),r={};for(o in n)r[o]=n[o];a.to(r,s.duration),a.easing(TWEEN.Easing.Exponential.Out),$.isFunction(i.draw)&&a.onUpdate(i.draw.bind(i)),e==t.objects.length-1&&a.onComplete(s._completed.bind(s)),a.start()}else{for(o in n)i[o]=n[o];i&&$.isFunction(i.draw)&&i.draw()}if(0===s.duration){for(e in t.objects)i=t.objects[e],i&&$.isFunction(i.draw)&&i.draw();s._completed()}},e.onComplete=function(t){var e=this;try{$.isFunction(t)&&e.completeCallbacks.push(t)}catch(i){}},e._completed=function(){var t,e,i=this,n=i.completeCallbacks;i.running=!1;for(t in i.layout.objects)e=i.layout.objects[t],e&&$.isFunction(e.draw)&&e.draw();for(t in i.layout.toHide)e=i.layout.toHide[t],e&&$.isFunction(e.hide)&&e.hide();for(t in n)n[t]()}},BubbleTree.Utils={},BubbleTree.Utils.log=function(){try{window.hasOwnProperty("console")&&console.log.apply(this,arguments)}catch(t){}},BubbleTree.Utils.amount2rad=function(t){return Math.pow(Math.max(0,t)/BubbleTree.a2radBase,.6)},BubbleTree.Utils.formatNumber=function(t){var e="";return 0>t&&(t=-1*t,e="-"),t>=1e12?e+Math.round(t/1e11)/10+"t":t>=1e9?e+Math.round(t/1e8)/10+"b":t>=1e6?e+Math.round(t/1e5)/10+"m":t>=1e3?e+Math.round(t/100)/10+"k":e+t},BubbleTree.Vector=function(t,e){var i=this;i.x=t,i.y=e,i.length=function(){var t=this;return Math.sqrt(t.x*t.x+t.y*t.y)},i.normalize=function(t){var e=this,i=e.length();t||(t=1),e.x*=t/i,e.y*=t/i},i.clone=function(){var t=this;return new BubbleTree.Vector(t.x,t.y)}},BubbleTree.Bubbles=BubbleTree.Bubbles||{},BubbleTree.Bubbles.Plain=function(t,e,i,n,o,s){var a=BubbleTree,r=a.Utils,h=this;h.className="bubble",h.node=t,h.paper=e.paper,h.origin=i,h.bc=e,h.rad=n,h.angle=o,h.color=s,h.alpha=1,h.visible=!1,h.ns=a,h.pos=a.Vector(0,0),h.bubbleRad=r.amount2rad(this.node.amount),h.container=h.bc.$container,h.childRotation=0,h.getXY=function(){var t=this,e=t.origin,i=t.angle,n=t.rad;void 0===t.pos&&(t.pos=new t.ns.Vector(0,0)),t.pos.x=e.x+Math.cos(i)*n,t.pos.y=e.y-Math.sin(i)*n},h.init=function(){var t=this;t.getXY();t.node.shortLabel||(t.node.shortLabel=t.node.label.length>t.bc.config.cutLabelsAt+3?t.node.label.substr(0,t.bc.config.cutLabelsAt)+"...":t.node.label),t.initialized=!0},h.onclick=function(t){var e=this;e.bc.onNodeClick(e.node),e.bc.navigateTo(e.node)},h.onhover=function(t){var e=this,i=e.bc.$container[0];t.node=e.node,t.target=e,t.bubblePos={x:e.pos.x,y:e.pos.y},t.mousePos={x:t.origEvent.pageX-i.offsetLeft,y:t.origEvent.pageY-i.offsetTop},t.type="SHOW",e.bc.tooltip(t)},h.onunhover=function(t){var e=this,i=e.bc.$container[0];t.node=e.node,t.type="HIDE",t.target=e,t.bubblePos={x:e.pos.x,y:e.pos.y},t.mousePos={x:t.origEvent.pageX-i.offsetLeft,y:t.origEvent.pageY-i.offsetTop},e.bc.tooltip(t)},h.draw=function(){var t=this,e=Math.max(5,t.bubbleRad*t.bc.bubbleScale),i=(t.pos.x,t.pos.y,t.getXY(),t.pos.x),n=t.pos.y;if(t.visible){t.circle.attr({cx:t.pos.x,cy:t.pos.y,r:e,"fill-opacity":t.alpha}),t.node.children.length>1?t.dashedBorder.attr({cx:t.pos.x,cy:t.pos.y,r:e-4,"stroke-opacity":.9*t.alpha}):t.dashedBorder.attr({"stroke-opacity":0}),t.label.show(),t.label.find("*").show(),t.label2.show(),e>=t.bc.config.minRadiusLabels?t.label2.hide():e>=t.bc.config.minRadiusAmounts?t.label.find(".desc").hide():e>=t.bc.config.minRadiusHideLabels?t.label.hide():(t.label.hide(),t.label2.hide()),t.label.css({width:2*e+"px",opacity:t.alpha}),t.label.css({left:t.pos.x-e+"px",top:t.pos.y-.5*t.label.height()+"px"});var o=Math.max(70,3*e);t.label2.css({width:o+"px",opacity:t.alpha}),t.label2.css({left:i-.5*o+"px",top:n+e+"px"})}},h.hide=function(){var t=this;t.circle.remove(),t.dashedBorder.remove(),t.label.remove(),t.label2.remove(),t.visible=!1},h.show=function(){var t=this,e=t.pos.x,i=t.pos.y,n=Math.max(5,t.bubbleRad*t.bc.bubbleScale);t.circle=t.paper.circle(e,i,n).attr({stroke:!1,fill:t.color}),t.dashedBorder=t.paper.circle(e,i,n-3).attr({stroke:"#ffffff","stroke-dasharray":"- "}),t.label=$('<div class="label '+t.node.id+'"><div class="amount">'+r.formatNumber(t.node.amount)+'</div><div class="desc">'+t.node.shortLabel+"</div></div>"),t.container.append(t.label),t.node.children.length>0&&($(t.circle.node).css({cursor:"pointer"}),$(t.label).css({cursor:"pointer"})),t.label2=$('<div class="label2 '+t.node.id+'"><span>'+t.node.shortLabel+"</span></div>"),t.container.append(t.label2);var o=[t.circle.node,t.label,t.dashedBorder.node],s=new t.ns.MouseEventGroup(t,o);s.click(t.onclick.bind(t)),s.hover(t.onhover.bind(t)),s.unhover(t.onunhover.bind(t)),t.visible=!0},h.addOverlay=function(){var t=this;t.overlay=t.paper.circle(t.circle.attrs.cx,t.circle.attrs.cy,t.circle.attrs.r).attr({stroke:!1,fill:"#fff",opacity:0}),Raphael.svg&&t.overlay.node.setAttribute("class",t.node.id),$(t.overlay.node).css({cursor:"pointer"}),$(t.overlay.node).click(t.onclick.bind(t)),$(t.label).click(t.onclick.bind(t))},h.init()},BubbleTree.Bubbles=BubbleTree.Bubbles||{},BubbleTree.Bubbles.Donut=function(t,e,i,n,o,s){var a=BubbleTree,r=a.Utils,h=this;h.className="bubble",h.node=t,h.paper=e.paper,h.origin=i,h.bc=e,h.rad=n,h.angle=o,h.color=s,h.alpha=1,h.visible=!1,h.ns=a,h.bubbleRad=r.amount2rad(this.node.amount),h.childRotation=0,h.getXY=function(){var t=this,e=t.origin,i=t.angle,n=t.rad;t.pos.x=e.x+Math.cos(i)*n,t.pos.y=e.y-Math.sin(i)*n},h.init=function(){var t=this;t.pos=new t.ns.Vector(0,0),t.getXY();var e,i,n,o=[],s=[],a=t.bc.config.bubbleStyles;t.node.shortLabel||(t.node.shortLabel=t.node.label.length>50?t.node.label.substr(0,30)+"...":t.node.label),t.breakdownOpacities=[.2,.7,.45,.6,.35],t.breakdownColors=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1];for(i in t.node.breakdowns)e=t.node.breakdowns[i],e.famount=r.formatNumber(e.amount),n=e.amount/t.node.amount,o.push(n),s.push(e),a&&a.hasOwnProperty("name")&&a.name.hasOwnProperty(e.name)&&a.name[e.name].hasOwnProperty("opacity")&&(t.breakdownOpacities[s.length-1]=a.name[e.name].opacity),a&&a.hasOwnProperty("name")&&a.name.hasOwnProperty(e.name)&&a.name[e.name].hasOwnProperty("color")&&(t.breakdownColors[s.length-1]=a.name[e.name].color,t.breakdownOpacities[s.length-1]=1);t.node.breakdowns=s,t.breakdown=o;t.initialized=!0},h.onclick=function(t){var e=this;e.bc.navigateTo(e.node)},h.onhover=function(t){var e=this,i=e.bc.$container[0];t.node=e.node,t.target=e,t.bubblePos={x:e.pos.x,y:e.pos.y},t.mousePos={x:t.origEvent.pageX-i.offsetLeft,y:t.origEvent.pageY-i.offsetTop},t.type="SHOW",e.bc.tooltip(t)},h.onunhover=function(t){var e=this,i=e.bc.$container[0];t.node=e.node,t.target=e,t.type="HIDE",t.bubblePos={x:e.pos.x,y:e.pos.y},t.mousePos={x:t.origEvent.pageX-i.offsetLeft,y:t.origEvent.pageY-i.offsetTop},e.bc.tooltip(t)},this.draw=function(){var t=this,e=Math.max(5,t.bubbleRad*t.bc.bubbleScale),i=(t.pos.x,t.pos.y,t.getXY(),e>20),n=t.pos.x,o=t.pos.y;if(t.visible){if(t.circle.attr({cx:n,cy:o,r:e,"fill-opacity":t.alpha}),t.node.children.length>1?t.dashedBorder.attr({cx:n,cy:o,r:.85*e,"stroke-opacity":.8*t.alpha}):t.dashedBorder.attr({"stroke-opacity":0}),t.breakdown.length>1){var s,a,r,h,l,c,b,u,d,p,f=.85*e,v=.5*-Math.PI;for(s in t.breakdown){p=t.breakdown[s]*Math.PI*2,a=n+Math.cos(v)*f,c=o+Math.sin(v)*f,r=n+Math.cos(v+p)*f,b=o+Math.sin(v+p)*f,h=n+Math.cos(v+p)*e,u=o+Math.sin(v+p)*e,l=n+Math.cos(v)*e,d=o+Math.sin(v)*e,v+=p;var g="M"+a+" "+c+" A"+f+","+f+" 0 "+(p>Math.PI?"1,1":"0,1")+" "+r+","+b+" L"+h+" "+u+" A"+e+","+e+" 0 "+(p>Math.PI?"1,0":"0,0")+" "+l+" "+d+" Z";t.breakdownArcs[s].attr({path:g,"stroke-opacity":.2*t.alpha,"fill-opacity":t.breakdownOpacities[s]*t.alpha})}}i?(t.label.show(),40>e?(t.label.find(".desc").hide(),t.label2.show()):(t.label.find(".desc").show(),t.label2.hide())):(t.label.hide(),t.label2.show()),t.label.css({width:2*e*.9+"px",opacity:t.alpha}),t.label.css({left:t.pos.x-.9*e+"px",top:t.pos.y-.53*t.label.height()+"px"});var m=Math.max(80,3*e);t.label2.css({width:m+"px",opacity:t.alpha}),t.label2.css({left:n-.5*m+"px",top:o+e+"px"})}},this.hide=function(){var t,e=this;e.circle.remove(),e.dashedBorder.remove(),e.label.remove(),e.label2.remove(),e.visible=!1;for(t in e.breakdownArcs)e.breakdownArcs[t].remove()},h.show=function(){var t,e=this,i=Math.max(5,e.bubbleRad*e.bc.bubbleScale);e.circle=e.paper.circle(e.pos.x,e.pos.y,i).attr({stroke:!1,fill:e.color}),$.isFunction(e.bc.config.initTooltip)&&e.bc.config.initTooltip(e.node,e.circle.node),e.dashedBorder=e.paper.circle(e.pos.x,e.pos.y,.85*i).attr({stroke:"#fff","stroke-opacity":.4*e.alpha,"stroke-dasharray":". ",fill:!1}),e.label=$('<div class="label '+e.node.id+'"><div class="amount">'+r.formatNumber(e.node.amount)+'</div><div class="desc">'+e.node.shortLabel+"</div></div>"),e.bc.$container.append(e.label),e.node.children.length>1&&($(e.circle.node).css({cursor:"pointer"}),$(e.label).css({cursor:"pointer"})),e.label2=$('<div class="label2 '+e.node.id+'"><span>'+e.node.shortLabel+"</span></div>"),e.bc.$container.append(e.label2);var n=[e.circle.node,e.label];if(e.breakdown.length>1){e.breakdownArcs={};for(t in e.breakdown){var o=e.breakdownColors[t]?e.breakdownColors[t]:"#fff",s=e.paper.path("M 0 0 L 2 2").attr({fill:o,
"fill-opacity":.4*Math.random()+.3,stroke:"#fff"});e.breakdownArcs[t]=s,$.isFunction(e.bc.config.initTooltip)&&e.bc.config.initTooltip(e.node.breakdowns[t],s.node)}for(t in e.breakdownArcs)$(e.breakdownArcs[t].node).click(e.onclick.bind(e))}var a=new e.ns.MouseEventGroup(e,n);a.click(e.onclick.bind(e)),a.hover(e.onhover.bind(e)),a.unhover(e.onunhover.bind(e)),e.visible=!0},h.arcHover=function(t){var e,i=this,n=i.bc.$container[0],o=i.breakdownArcs,s=i.node.breakdowns;for(e in o)if(o[e].node==t.target)return t.node=s[e],t.bubblePos={x:i.pos.x,y:i.pos.y},t.mousePos={x:t.pageX-n.offsetLeft,y:t.pageY-n.offsetTop},t.target=i,t.type="SHOW",void i.bc.tooltip(t);vis4.log("cant find the breakdown node")},h.arcUnhover=function(t){var e,i=this,n=i.bc.$container[0],o=i.breakdownArcs,s=i.node.breakdowns;for(e in o)if(o[e].node==t.target)return t.node=s[e],t.bubblePos={x:i.pos.x,y:i.pos.y},t.mousePos={x:t.pageX-n.offsetLeft,y:t.pageY-n.offsetTop},t.type="HIDE",t.target=i,void i.bc.tooltip(t);vis4.log("cant find the breakdown node")},h.init()},BubbleTree.Bubbles=BubbleTree.Bubbles||{},BubbleTree.Bubbles.Icon=function(t,e,i,n,o,s){var a=BubbleTree,r=a.Utils,h=this;h.className="bubble",h.node=t,h.paper=e.paper,h.origin=i,h.bc=e,h.rad=n,h.angle=o,h.color=s,h.alpha=1,h.visible=!1,h.ns=a,h.pos=a.Vector(0,0),h.bubbleRad=r.amount2rad(this.node.amount),h.iconLoaded=!1,h.childRotation=0,h.getXY=function(){var t=this,e=t.origin,i=t.angle,n=t.rad;void 0===t.pos&&(t.pos=new t.ns.Vector(0,0)),t.pos.x=e.x+Math.cos(i)*n,t.pos.y=e.y-Math.sin(i)*n},h.init=function(){var t=this;t.getXY(),t.hasIcon=t.node.hasOwnProperty("icon"),t.node.shortLabel||(t.node.shortLabel=t.node.label.length>50?t.node.label.substr(0,30)+"...":t.node.label),t.initialized=!0},h.show=function(){var t=this,e=t.pos.x,i=t.pos.y,n=Math.max(5,t.bubbleRad*t.bc.bubbleScale);t.circle=t.paper.circle(e,i,n).attr({stroke:!1,fill:t.color}),t.dashedBorder=t.paper.circle(e,i,Math.min(n-3,.95*n)).attr({stroke:"#ffffff","stroke-dasharray":"- "}),$.isFunction(t.bc.config.initTooltip)&&t.bc.config.initTooltip(t.node,t.circle.node),t.label=$('<div class="label '+t.node.id+'"><div class="amount">'+r.formatNumber(t.node.amount)+'</div><div class="desc">'+t.node.shortLabel+"</div></div>"),t.bc.$container.append(t.label),$.isFunction(t.bc.config.initTooltip)&&t.bc.config.initTooltip(t.node,t.label[0]),t.label2=$('<div class="label2 '+t.node.id+'"><span>'+t.node.shortLabel+"</span></div>"),t.bc.$container.append(t.label2),t.node.children.length>0&&($(t.circle.node).css({cursor:"pointer"}),$(t.label).css({cursor:"pointer"})),t.visible=!0,t.hasIcon?t.iconLoaded?t.displayIcon():t.loadIcon():t.addOverlay()},h.loadIcon=function(){var t=this,e=new vis4loader;e.add(t.bc.config.rootPath+t.node.icon),e.load(t.iconLoadComplete.bind(t))},h.iconLoadComplete=function(t){var e,i,n,o=this;e=t.items[0].data,o.iconPathData="",e=$(e),n=$("path",e);for(i in n)n[i]&&$.isFunction(n[i].getAttribute)&&(o.iconPathData+=String(n[i].getAttribute("d"))+" ");o.iconLoaded=!0,o.displayIcon()},h.displayIcon=function(){var t,e=this;e.iconPaths=[],t=e.paper.path(e.iconPathData),t.attr({fill:"#fff",stroke:"none"}).translate(-50,-50),e.iconPaths.push(t),e.addOverlay()},h.addOverlay=function(){var t=this;if(t.overlay=t.paper.circle(t.circle.attrs.cx,t.circle.attrs.cy,t.circle.attrs.r).attr({stroke:!1,fill:"#fff","fill-opacity":0}),Raphael.svg&&t.overlay.node.setAttribute("class",t.node.id),$(t.overlay.node).css({cursor:"pointer"}),$(t.overlay.node).click(t.onclick.bind(t)),$(t.label).click(t.onclick.bind(t)),$(t.label2).click(t.onclick.bind(t)),$.isPlainObject(t.bc.tooltip)){var e=t.bc.tooltip.content(t.node);$(t.overlay.node).qtip({position:{target:"mouse",viewport:$(window),adjust:{x:7,y:7}},show:{delay:t.bc.tooltip.delay||100},content:{title:e[0],text:e[1]}})}},h.removeIcon=function(){var t,e=this;for(t in e.iconPaths)e.iconPaths[t].remove();e.iconPaths=[]},h.draw=function(){var t,e,i,n,o,s=this,a=Math.max(5,s.bubbleRad*s.bc.bubbleScale),r=(s.pos.x,s.pos.y,s.getXY(),s.pos.x),h=s.pos.y,l=s.hasIcon&&a>15,c=s.hasIcon?a>40:a>20;if(s.visible){s.circle.attr({cx:r,cy:h,r:a,"fill-opacity":s.alpha}),s.overlay&&s.overlay.attr({cx:r,cy:h,r:Math.max(10,a)}),s.node.children.length>1?s.dashedBorder.attr({cx:s.pos.x,cy:s.pos.y,r:Math.min(a-3,a-4),"stroke-opacity":.9*s.alpha}):s.dashedBorder.attr({"stroke-opacity":0}),c?(s.label.show(),l&&70>a||!l&&40>a?(s.label.find(".desc").hide(),s.label2.show()):(s.label.find(".desc").show(),s.label2.hide())):(s.label.hide(),s.label2.show()),o=l?h+.77*a-s.label.height():h-.5*s.label.height(),s.label.css({width:(l?1.2*a:2*a)+"px",opacity:s.alpha}),s.label.css({left:(l?r-.6*a:r-a)+"px",top:o+"px"});var b=Math.max(80,3*a);if(s.label2.css({width:b+"px",opacity:s.alpha}),s.label2.css({left:r-.5*b+"px",top:h+a+"px"}),s.hasIcon)if(l){i=(a-(c?.5*s.label.height():0))/60;for(t in s.iconPaths)e=s.iconPaths[t],n="1"==Raphael.version[0]?"scale("+i+") translate("+r/i+", "+(h+(c?s.label.height()*-.5:0))/i+")":"scale("+i+") translate("+(r/i-50)+", "+((h+(c?s.label.height()*-.5:0))/i-50)+")",e.node.setAttribute("transform",n),e.attr({"fill-opacity":s.alpha})}else for(t in s.iconPaths)e=s.iconPaths[t],e.attr({"fill-opacity":0})}},h.hide=function(){var t=this;t.circle.remove(),t.dashedBorder.remove(),t.label.remove(),t.label2.remove(),t.visible=!1,t.hasIcon&&t.removeIcon(),t.overlay&&t.overlay.remove()},h.onclick=function(t){var e=this;e.bc.onNodeClick(e.node),e.bc.navigateTo(e.node)},h.onhover=function(t){var e=this,i=e.bc.$container[0];t.node=e.node,t.bubblePos={x:e.pos.x,y:e.pos.y},t.mousePos={x:t.origEvent.pageX-i.offsetLeft,y:t.origEvent.pageY-i.offsetTop},t.type="SHOW",t.target=e,e.bc.tooltip(t)},h.onunhover=function(t){var e=this,i=e.bc.$container[0];t.node=e.node,t.type="HIDE",t.target=e,t.bubblePos={x:e.pos.x,y:e.pos.y},t.mousePos={x:t.origEvent.pageX-i.offsetLeft,y:t.origEvent.pageY-i.offsetTop},e.bc.tooltip(t)},h.init()},"object"==typeof module&&"object"==typeof module.exports&&(module.exports=BubbleTree);
//# sourceMappingURL=data:application/json;base64,
